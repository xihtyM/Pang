// 0, 0, 13, str, handle(-11)
//asm GetStdHandle "
//    pop     rcx
//    call    GetStdHandle
//    push    rcx
//"

asm _strlen "
    xor     rax, rax
    mov     rdi, [rsp + 8]

.loop:
    cmp     byte [rdi + rax], 0
    je      .done

    inc     rax
    jmp     .loop

.done:
    pop     rbx
    push    rax
    push    rbx
"

asm _puts "
    mov     r8, [rsp + 8]
    mov     rdx, [rsp + 16]
    mov     rcx, -11
    call    GetStdHandle
    mov     rcx, rax
    xor     r9, r9
    call    WriteFile
"

macro stderr_fileno 2 end
macro stdout_fileno 1 end
macro stdin_fileno 0 end

macro puts
    _strlen _puts
end
